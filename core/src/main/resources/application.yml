spring:
  profiles:
    active: local

---
## docker install
# docker pull postgres
# docker run --name internal -d -p 5432:5432 -e POSTGRES_PASSWORD="1234" postgres
# docker run --name external -d -p 5433:5432 -e POSTGRES_PASSWORD="1234" postgres

spring:
  config:
    activate:
      on-profile: local

  quartz:
    overwrite-existing-jobs: true
    scheduler-name: scheduler
    job-store-type: jdbc
    jdbc:
      initialize-schema: always # always 초기화 이후 never 로 변경
    properties:
      org:
        quartz:
          jobStore:
            driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate

  batch:
    initialize-schema: always
    job:
      enabled: false

  datasource:
    internal:
      hikari:
        jdbc-url: jdbc:postgresql://192.168.10.20:5432/QRAY
        username: qray
        password: ensys1212
        minimum-idle: 10
        maximum-pool-size: 50
        driver-class-name: org.postgresql.Driver
        data-source-properties:
          rewriteBatchedStatements: true
      jpa:
        persistence-unit-name: internal
        entity-path: com.internal.domain
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        ddl-auto: update
        format-sql: false # 쿼리 형태를 보정
        show-sql: false # true 로 설정시 System.out 로 출력되기에 좋지 않다.
        properties:
          hibernate:
            jdbc:
              batch_size: 1000
            order_inserts: true
            order_updates: true

    external:
      hikari:
        jdbc-url: jdbc:sqlserver://192.168.10.20:1433;databaseName=NEOE;
        username: NEOEB
        password: NEOEB
        minimum-idle: 10
        maximum-pool-size: 10
        driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
      jpa:
        persistence-unit-name: external
        entity-path: com.external.domain
        database-platform: org.hibernate.dialect.SQLServer2012Dialect
        ddl-auto: update # 함부로 변경 금지
        format-sql: true # 쿼리 형태를 보정
        show-sql: false # true 로 설정시 System.out 로 출력되기에 좋지 않다.

    ## internal 설정을 의존성을 가지도록 설정
    ## 다른 디비에 의존해야 한다면 데이터소스 생성하여 주입하여야함.
    scheduler:
      hikari:
        jdbc-url: jdbc:h2:tcp://localhost/~/scheduler
        username: sa
        password: #local - password
        minimum-idle: 10
        maximum-pool-size: 10
        driver-class-name: org.h2.Driver

logging.level:
  org.hibernate.SQL: debug